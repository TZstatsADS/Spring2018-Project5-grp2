# Load data
df <- read.csv("../data/data.csv", header = TRUE, stringsAsFactors = FALSE)
# Delete the first column from dataset as id won't be used, and delete last column from dataset as its entries are all NA's
df <- df[,-c(1,33)]
# Factorize the diagnosis attribute
df$diagnosis <- factor(df$diagnosis)
df$diagnosis <- as.integer(df$diagnosis)-1   # M=1 B=0
# Split entire data into 80% train set and 20% test set
set.seed(123)
index <- sample(1:nrow(df),0.8*nrow(df))
df.train <- df[index,]
df.test <- df[-index,]
# Check proportion of diagnosis (Benign/Malignant) in train/test sets
#prop.table(table(df.train$diagnosis))
#prop.table(table(df.test$diagnosis))
feature_selected <- c("texture_worst", "area_se", "perimeter_worst",
"concave.points_worst", "concavity_worst", "fractal_dimension_se",
"concavity_se", "texture_se", "smoothness_se",
"smoothness_worst", "fractal_dimension_worst", "symmetry_se",
"symmetry_mean", "symmetry_worst")
df.train2 <- df.train[,c("diagnosis",feature_selected)]
feature_selected <- c("perimeter_worst", "concave.points_worst", "area_se",
"concavity_worst", "texture_worst", "smoothness_worst",
"symmetry_worst", "concavity_se", "fractal_dimension_worst",
"symmetry_mean", "fractal_dimension_se")
df.train2 <- df.train2[,c("diagnosis",feature_selected)]
df.test2 <- df.test[,c("diagnosis",feature_selected)]
run.logi <- TRUE
source("../lib/logi.R")
if(run.logi){
output_logi <- logi(df.train, df.test)
output2_logi <- logi(df.train2, df.test2)
save(output_logi, file = "../output/output_logi.RData")
save(output2_logi, file = "../output/output2_logi.RData")
}else{
load("../output/output_logi.RData")
load("../output/output2_logi.RData")
}
run.gbm <- TRUE
source("../lib/gbmp.r")
if(run.gbm){
output_gbm <- gbmp(df.train, df.test)
output2_gbm <- gbmp(df.train2, df.test2)
save(output_gbm, file = "../output/output_gbm.RData")
save(output2_gbm, file = "../output/output2_gbm.RData")
}else{
load("../output/output_gbm.RData")
load("../output/output2_gbm.RData")
}
